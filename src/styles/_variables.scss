// Creating the base variables as CSS variables.
// This leverages native (modern) browser technology for variable rendering,
// debugging (e.g. Chrome developer tools), and usage with JavaScript.
//
// To avoid collision with external styles (e.g. Chrome extensions or
// 3rd party libraries), we'll prefix all our variables with the namespace
// of the application. In our case, "ram", (Rick and Morty).
:root {
  // COLORS
  --ram--primary: #7b68ee;
  --ram--background-1: #1e272e;
  --ram--background-2: #2b343b;
  --ram--background-3: #384047;
  --ram--background-inverse: #ffffff;
  --ram--text-1: #ffffff;
  --ram--text-2: #abaeb0;
  --ram--text-3: #7c828d;
  --ram--text-inverse: #292d34;
  --ram--border1: #384047;
  // TYPOGRAPHY
  --ram--font-serif: 'GothamPro', system-ui, -apple-system, BlinkMacSystemFont,
    'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue',
    sans-serif;
  --ram--font-size-1: 64px;
  --ram--font-size-2: 36px;
  --ram--font-size-3: 32px;
  --ram--font-size-4: 18px;
  --ram--font-size-5: 16px;
  --ram--border-radius-0: 0px;
  --ram--border-radius-1: 3px;
  --ram--border-radius-2: 6px;
  --ram--border-radius-3: 10px;
  --ram--border-radius-10: 100px;
  --ram--shadow-0: 0 0 0 rgba(0, 0, 0, 0);
  --ram--shadow-1: 0px 1px 3px rgba(0, 0, 0, 0.11);
}

// SCSS variables are still useful, even though we have native CSS variables,
// because it is simply to reference the CSS variables with more concise
// SCSS variables.

// COLORS
$primary: var(--ram--primary);
$background1: var(--ram--background-1);
$background2: var(--ram--background-2);
$background3: var(--ram--background-3);
$backgroundInverse: var(--ram--background-inverse);
$text1: var(--ram--text-1);
$text2: var(--ram--text-2);
$text3: var(--ram--text-3);
$textInverse: var(--ram--text-inverse);
$border1: var(--ram--border1);

// TYPOGRAPHY
$fontSerif: var(--ram--font-serif);
$fontSize1: var(--ram--font-size-1);
$fontSize2: var(--ram--font-size-2);
$fontSize3: var(--ram--font-size-3);
$fontSize4: var(--ram--font-size-4);
$fontSize5: var(--ram--font-size-5);

// EFFECTS
$borderRadius0: var(--ram--border-radius-0);
$borderRadius1: var(--ram--border-radius-1);
$borderRadius2: var(--ram--border-radius-2);
$borderRadius3: var(--ram--border-radius-3);
$borderRadius10: var(--ram--border-radius-10);
$shadow0: var(--ram--shadow-0);
$shadow1: var(--ram--shadow-1);

// LAYOUT
$appWidth: 1004px;
